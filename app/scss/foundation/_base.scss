/*
========================================================
	- base
========================================================
*/

$primary : #000000;

$deepbrack_color: #231815;
$bluegray_color: #7a89a8;
$lightgray_color : #ededed;
$darkgray_color:#565f64;
$blue_color:#252a6d;
$text_color: #000000;

$max_width : 1920px;
$min_width : 992px;
$con_width : 576px;



$jp_font: 'Noto Sans JP', 'Oswald', "Yu Gothic Medium", "游ゴシック体", YuGothic, "ヒラギノ角ゴシック Pro", "Hiragino Kaku Gothic Pro", "メイリオ", Meiryo, "ＭＳ Ｐゴシック", "MS PGothic", sans-serif;

$jp_font_only: 'Noto Sans JP', "Yu Gothic Medium", "游ゴシック体", YuGothic, "ヒラギノ角ゴシック Pro", "Hiragino Kaku Gothic Pro", "メイリオ", Meiryo, "ＭＳ Ｐゴシック", "MS PGothic", sans-serif;

$en_font: 'Oswald', sans-serif;

$kozuka_font:'小塚ゴシック Pro','Kozuka Gothic Pro',sans-serif;
$kozukaMincyo_font:'小塚明朝 Pro','Kozuka Mincyo Pro',serif;

$robot_font:'Roboto';

$breakpoints: (
  's': 'screen and (max-width: 576px) and (orientation: portrait)',
  /*'s' : 'screen and (max-width: 680px) ,screen and (max-width: 737px) and (orientation: landscape)',*/
  'm': 'screen and (min-width: 577px)',
  'l': 'screen and (min-width: 993px)',
  /*'nav': 'screen and (max-width: 680px) ,screen and (max-width: 737px) and (orientation: landscape)'*/
) !default;

@mixin media-query($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
      @media #{map-get($breakpoints, $breakpoint)} {
          @content;
      }
  } @else {
      @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
      + "Please make sure it is defined in `$breakpoints` map.";
  }
}


/*
body{
    @include media-query('s') {
      background-color: yellow ;
    }
    @include media-query('m') {
      background-color: green;
    }
    @include media-query('l') {
      background-color: lightblue;
    }
 }
 */
